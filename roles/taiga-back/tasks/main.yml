---
- name: install required backend-specific packages
  become: true
  become_user: root
  apt:
    name: "{{ item }}"
  with_items:
    - autoconf
    - automake
    - binutils-doc
    - bison
    - build-essential
    - curl
    - flex
    - gettext
    - git
    - libffi-dev
    - libfreetype6-dev
    - libgdbm-dev
    - libjpeg-dev
    - libncurses5-dev
    - libtool
    - libzmq3-dev
    - python-dev
    - python-pip
    - python3
    - python3-dev
    - python3-pip
    - tmux
    - virtualenvwrapper
    - zlib1g-dev
  tags:
    - install
    - back-install

- name: set facts identifying backend services
  set_fact:
    _taiga_is_rabbit_node: "(taiga_enable_async_tasks or taiga_enable_events) and (taiga_rabbitmq_host in ['localhost', '127.0.0.1', '::1', ansible_hostname, ansible_fqdn])"
    _taiga_is_redis_node: "(taiga_enable_async_tasks | bool) and (taiga_back_redis_host in ['localhost', '127.0.0.1', '::1', ansible_hostname, ansible_fqdn])"
  tags: always

- include: rabbitmq.yml
  when: _taiga_is_rabbit_node

- include: redis.yml
  when: _taiga_is_redis_node

- include: postgresql.yml

- name: check out git repository
  become: true
  become_user: "{{ taiga_user }}"
  git:
    repo: "{{ taiga_back_repo }}"
    dest: "{{ taiga_back_checkout_dir }}"
    version: "{{ taiga_back_version }}"
  tags:
    - install
    - back-install

- name: set up virtualenv
  become: true
  become_user: "{{ taiga_user }}"
  command: >
    virtualenv --python=python3.5
    {{ taiga_back_venv_dir }}
  args:
    creates: "{{ taiga_back_venv_dir }}/bin/python"

- name: install Python packages into virtualenv
  become: true
  become_user: "{{ taiga_user }}"
  pip:
    requirements: "{{ taiga_back_checkout_dir }}/requirements.txt"
    virtualenv: "{{ taiga_back_venv_dir }}"
    virtualenv_python: "python3.5"
  tags:
    - install
    - back-install

- name: deploy local settings
  become: true
  become_user: "{{ taiga_user }}"
  template:
    mode: '0644'
    src: local.py.j2
    dest: "{{ taiga_back_checkout_dir }}/settings/local.py"
  notify:
    - "restart {{ taiga_service_manager }}"
  tags:
    - config
    - back-config

- name: optionally deploy local Celery settings
  become: true
  become_user: "{{ taiga_user }}"
  template:
    mode: '0644'
    src: celery_local.py.j2
    dest: "{{ taiga_back_checkout_dir }}/settings/celery_local.py"
  notify:
    - "restart {{ taiga_service_manager }}"
  when: "taiga_enable_async_tasks | bool"
  tags:
    - config
    - back-config

- name: migrate database
  become: true
  become_user: "{{ taiga_user }}"
  django_manage:
    app_path: "{{ taiga_back_checkout_dir }}"
    command: migrate
    virtualenv: "{{ taiga_back_venv_dir }}"
  tags:
    - install
    - back-install

- name: load initial user data
  become: true
  become_user: "{{ taiga_user }}"
  django_manage:
    app_path: "{{ taiga_back_checkout_dir }}"
    command: loaddata initial_user
    virtualenv: "{{ taiga_back_venv_dir }}"
  when: taiga_back_load_initial_user_data
  tags:
    - install
    - back-install

- name: load initial project templates
  become: true
  become_user: "{{ taiga_user }}"
  django_manage:
    app_path: "{{ taiga_back_checkout_dir }}"
    command: loaddata initial_project_templates
    virtualenv: "{{ taiga_back_venv_dir }}"
  when: taiga_back_load_initial_project_templates
  tags:
    - install
    - back-install

- name: compile messages
  become: true
  become_user: "{{ taiga_user }}"
  django_manage:
    app_path: "{{ taiga_back_checkout_dir }}"
    command: compilemessages
    virtualenv: "{{ taiga_back_venv_dir }}"
  tags:
    - install
    - back-install

- name: collect static assets
  become: true
  become_user: "{{ taiga_user }}"
  django_manage:
    app_path: "{{ taiga_back_checkout_dir }}"
    command: collectstatic
    virtualenv: "{{ taiga_back_venv_dir }}"
  tags:
    - install
    - back-install

- name: create sample data
  become: true
  become_user: "{{ taiga_user }}"
  django_manage:
    app_path: "{{ taiga_back_checkout_dir }}"
    command: sample_data
    virtualenv: "{{ taiga_back_venv_dir }}"
  when: taiga_back_create_sample_data
  tags:
    - install
    - back-install

- include: "{{ taiga_service_manager }}.yml"

